(()=>{"use strict";const e="さんのターンです\nカードを選択してください",t="さんのターンです",s="カードを選択してください";class n{constructor(){this.sectionElement=document.getElementById("name-entry-section"),this.bubble=this.sectionElement.querySelector(".name-entry-section__bubble"),this.bubbleText=this.bubble.querySelector(".name-entry-section__bubble__text"),this.enterFirstInput=document.getElementById("enter-first-player-name-event"),this.enterSecondInput=document.getElementById("enter-second-player-name-event"),this.button=document.getElementById("enter-player-name-and-decide-event")}}class i{constructor(){this.enterFirstInput=document.getElementById("enter-first-player-name-event"),this.enterSecondInput=document.getElementById("enter-second-player-name-event"),this.button=document.getElementById("enter-player-name-and-decide-event")}}class r extends i{constructor(){super(),this.configure()}configure(){this.enterFirstInput.addEventListener("input",this.inputHundler.bind(this))}inputHundler(){this.enterFirstInput.value.length>1?this.button.classList.remove("--lock"):this.button.classList.add("--lock")}}const c={firstUser:{name:"",decideCard:""},secondUser:{name:"",decideCard:""}},l={firstUser:{name:"",decideCard:""},secondUser:{name:"",decideCard:""}},o={winner:{name:"",decideCard:""},loser:{name:"",decideCard:""}};class a extends i{constructor(){super(),this.configure()}configure(){this.enterSecondInput.addEventListener("input",this.inputHundler.bind(this))}inputHundler(){this.enterSecondInput.value.length>1?this.button.classList.remove("--lock"):this.button.classList.add("--lock")}}class d extends n{constructor(){super(),this.init(),this.animation(),new a}init(){this.setButton(),this.setEnterInputStatus()}animation(){this.enterFirstInputAnimation(),this.enterSecondInputAnimation(),this.bubbleAnimation()}setButton(){this.button.classList.add("--lock")}setEnterInputStatus(){this.enterSecondInput.style.display="block",this.enterSecondInput.classList.add("--rightSide")}enterFirstInputAnimation(){this.enterFirstInput.classList.add("--slideOut"),setTimeout((()=>{this.sectionElement.querySelector(".name-entry-section__name-entry-event__content").removeChild(this.enterFirstInput)}),2200)}enterSecondInputAnimation(){this.enterSecondInput.classList.add("--slideIn"),setTimeout((()=>{this.enterSecondInput.classList.remove("--lock")}),1200),setTimeout((()=>{this.enterSecondInput.classList.add("--center")}),2200),setTimeout((()=>{this.enterSecondInput.classList.remove("--hide"),this.enterSecondInput.classList.remove("--rightSide"),this.enterSecondInput.classList.remove("--slideIn")}),2300)}bubbleAnimation(){this.bubble.classList.add("--fadeOut"),setTimeout((()=>{this.bubbleText.innerText="2人目のプレイヤー名を入力して\nクリックしてね！",this.bubbleText.style.top="2em"}),900),setTimeout((()=>{this.bubble.classList.remove("--fadeOut")}),1200)}}class h{constructor(){this.hostElement=document.getElementById("app");const e=this.hostElement.querySelector(".playing-card-game-section__card-list");this.card=e.querySelectorAll(".card"),this.bubble=this.hostElement.querySelector(".playing-card-game-section__bubble"),this.bubbleText=this.bubble.querySelector(".playing-card-game-section__bubble__text"),this.buttonContent=this.bubble.querySelector(".playing-card-game-section__event-content"),this.configure()}configure(){this.card.forEach((e=>{e.addEventListener("click",(()=>{this.cardAddSelectType(e),this.bubbleEventAnimation()}))}))}clickHandler(){}cardAddSelectType(e){this.cardRemoveSelectType(),e.classList.add("--selected")}cardRemoveSelectType(){this.card.forEach((e=>{e.classList.contains("--selected")&&e.classList.remove("--selected")}))}bubbleEventAnimation(){this.bubbleVibe(),"none"===this.buttonContent.style.display&&(this.bubbleText.style.display="none",this.buttonContent.style.display="block")}bubbleVibe(){this.bubble.classList.add("--rightRotate"),setTimeout((()=>{this.bubble.classList.remove("--rightRotate"),this.bubble.classList.add("--leftRotate")}),100),setTimeout((()=>{this.bubble.classList.remove("--leftRotate")}),200)}}class m{constructor(e){this.username=e,this.hostElement=document.getElementById("app"),this.templateElement=document.getElementById("opening-message-label__template");const t=document.importNode(this.templateElement.content,!0);this.element=t.firstElementChild,this.element.id="opening-message-label",this.firstText=this.element.querySelector(".opening-message-label-text--first"),this.secondText=this.element.querySelector(".opening-message-label-text--second"),this.init(),this.attach(),this.animation()}attach(){this.hostElement.insertAdjacentElement("beforeend",this.element)}init(){this.labeiInit(),this.firstTextInit(),this.secondTextInit()}animation(){this.labelAnimation(),this.firstTextAnimation(),this.secondTextAnimation(),setTimeout((()=>{this.destroy()}),3200)}destroy(){this.hostElement.removeChild(this.element)}labeiInit(){this.element.classList.add("--hide")}firstTextInit(){this.firstText.innerText=this.username+t,this.firstText.classList.add("--hide"),this.firstText.classList.add("--rightSide")}secondTextInit(){this.secondText.innerText=s,this.secondText.classList.add("--hide"),this.secondText.classList.add("--rightSide")}labelAnimation(){this.element.classList.add("--fadeIn"),setTimeout((()=>{this.element.classList.add("--fadeOut")}),2700)}firstTextAnimation(){setTimeout((()=>{this.firstText.classList.add("--slideIn")}),300),setTimeout((()=>{this.firstText.classList.add("--slideOut")}),1200)}secondTextAnimation(){setTimeout((()=>{this.secondText.classList.add("--slideIn")}),1200),setTimeout((()=>{this.secondText.classList.add("--slideOut")}),2100)}}class u{constructor(){this.username=l.secondUser.name,this.sectionElement=document.getElementById("playing-card-game-section"),this.bubble=this.sectionElement.querySelector(".playing-card-game-section__bubble"),this.bubbleText=this.bubble.querySelector(".playing-card-game-section__bubble__text"),this.buttonContent=this.bubble.querySelector(".playing-card-game-section__event-content");const e=this.sectionElement.querySelector(".playing-card-game-section__card-list");this.card=e.querySelectorAll(".card"),this.selectedCard=document.getElementById(l.firstUser.decideCard),this.usernameOnSelectedCard=l.firstUser.name,this.init(),this.animation()}init(){this.bubbleInit(),this.cardInit()}animation(){this.cardAnimation(),new m(this.username),setTimeout((()=>{this.bubbleAnimation()}),3500)}bubbleInit(){this.bubbleText.innerText=this.username+e,this.bubble.style.display="none",this.bubble.classList.add("--hide"),this.bubbleText.style.display="block",this.buttonContent.style.display="none"}cardInit(){this.selectedCard.classList.remove("--selected"),this.selectedCard.classList.add("--decided");const e=this.selectedCard.querySelector(".name__front-side"),t=this.selectedCard.querySelector(".name__back-side");e.innerText=this.usernameOnSelectedCard,t.innerText=this.usernameOnSelectedCard,this.card.forEach((e=>{e.classList.add("--lock")}))}bubbleAnimation(){this.bubble.style.display="block",setTimeout((()=>{this.bubble.classList.add("--fadeIn")}),100),setTimeout((()=>{this.bubble.classList.remove("--hide")}),200)}cardAnimation(){setTimeout((()=>{this.card.forEach((e=>{e.classList.remove("--lock")}))}),3500)}}class b{constructor(){if(this.firstUserDecidedCard=l.firstUser.decideCard,this.secondUserDecidedCard=l.secondUser.decideCard,this.userGetNumber(this.firstUserDecidedCard)>this.userGetNumber(this.secondUserDecidedCard))o.winner=l.firstUser,o.loser=l.secondUser;else{if(!(this.userGetNumber(this.firstUserDecidedCard)<this.userGetNumber(this.secondUserDecidedCard)))return;o.winner=l.secondUser,o.loser=l.firstUser}console.log(o)}userGetNumber(e){const t=document.getElementById(e).querySelector(".num");return"number"==typeof+t.innerText?+t.innerText:0}}const y=["a","b","c","d","e"],g={truth:"",challenge:""};class p{constructor(){this.hostElement=document.getElementById("order-truth-content"),this.element=this.hostElement.querySelector(".order-truth-content-second"),this.text1=this.element.querySelector(".order-truth-content-second__message--text1"),this.text2=this.element.querySelector(".order-truth-content-second__message--text2"),this.text3=this.element.querySelector(".order-truth-content-second__message--text3"),this.init(),this.animation()}init(){this.text1.innerText=o.loser.name,this.text2.innerText=o.winner.name+"からの指示です。"}animation(){this.text3.innerText=g.truth+'についての"真実"をお願いします',this.element.style.display="block"}}class E{constructor(){this.hostElement=document.getElementById("order-truth-content"),this.element=document.querySelector(".order-truth-content-first"),this.button=document.getElementById("decide-truth-event"),this.select=this.element.querySelector(".order-truth-content__select-list-input"),this.configure()}configure(){this.button.addEventListener("click",this.eventHandler.bind(this))}eventHandler(){console.log("select truth"),console.log(this.select.value),g.truth=this.select.value,this.hostElement.removeChild(this.element),new p}}class f{constructor(){this.select=document.querySelector(".order-truth-content__select-list-input"),this.text2=document.querySelector(".order-truth-content-first__message--text2"),this.text3=document.querySelector(".order-truth-content-first__message--text3"),this.init(),this.animation()}init(){this.text2.innerText=o.winner.name,this.text3.innerHTML=o.loser.name+'に指示する"真実"を選んでください'}animation(){for(let e=0;e<y.length;e++){const t=document.createElement("option");t.innerText=y[e],t.value=y[e],this.select.appendChild(t)}this.next()}next(){new E}}class I{constructor(){this.hostElement=document.getElementById("truth-or-callenge-app"),this.templateElement=document.getElementById("order-truth-content-template");const e=document.importNode(this.templateElement.content,!0);this.element=e.firstElementChild,this.element.id="order-truth-content",this.attach(),this.next()}attach(){this.hostElement.insertAdjacentElement("beforeend",this.element)}next(){new f}}class S{constructor(){this.hostElement=document.getElementById("truth-or-callenge-app"),this.element=document.getElementById("choice-truth-or-challenge"),this.button=document.getElementById("choice-truth-event"),this.configure()}configure(){this.button.addEventListener("click",this.eventHandler.bind(this))}eventHandler(){this.destroyElement(),new I}destroyElement(){this.hostElement.removeChild(this.element)}}class T{constructor(){this.hostElement=document.getElementById("truth-or-callenge-app"),this.templateElement=document.getElementById("order-challenge-content-template");const e=document.importNode(this.templateElement.content,!0);this.element=e.firstElementChild,this.element.id="order-challenge-content",this.attach()}attach(){this.hostElement.insertAdjacentElement("beforeend",this.element)}}class x{constructor(){this.hostElement=document.getElementById("truth-or-callenge-app"),this.element=document.getElementById("choice-truth-or-challenge"),this.button=document.getElementById("choice-challenge-event"),this.configure()}configure(){this.button.addEventListener("click",this.eventHandler.bind(this))}eventHandler(){this.destroyElement(),new T}destroyElement(){this.hostElement.removeChild(this.element)}}class _{constructor(){this.hostElement=document.getElementById("truth-or-callenge-app"),this.templateElement=document.getElementById("choice-truth-or-callenge-template");const e=document.importNode(this.templateElement.content,!0);this.element=e.firstElementChild,this.element.id="choice-truth-or-challenge",this.text1=this.element.querySelector(".choice-truth-or-callenge-section__message--text1"),this.text2=this.element.querySelector(".choice-truth-or-callenge-section__message--text2"),this.eventContainer=this.element.querySelector(".choice-truth-or-callenge-section__event-container"),this.attach(),this.init(),this.animation()}attach(){this.hostElement.insertAdjacentElement("beforeend",this.element)}init(){this.text1.classList.add("--hide"),this.text1.innerText=o.loser.name,this.text2.classList.add("--hide"),this.eventContainer.classList.add("--hide")}animation(){setTimeout((()=>{this.text1.classList.add("--fade-in"),setTimeout((()=>{this.text1.classList.remove("--hide")}),100),setTimeout((()=>{this.text1.classList.remove("--fade-in")}),750)}),100),setTimeout((()=>{this.text2.classList.add("--fade-in"),setTimeout((()=>{this.text2.classList.remove("--hide")}),100),setTimeout((()=>{this.text2.classList.remove("--fade-in")}),750)}),850),setTimeout((()=>{this.eventContainer.classList.add("--fade-in"),setTimeout((()=>{this.eventContainer.classList.remove("--hide")}),100),setTimeout((()=>{this.eventContainer.classList.remove("--fade-in")}),750),this.event()}),1600)}event(){new S,new x}}class v{constructor(){this.hostElement=document.getElementById("app"),this.templateElement=document.getElementById("truth-or-callenge-template");const e=document.importNode(this.templateElement.content,!0);this.element=e.firstElementChild,this.element.id="truth-or-callenge-app",this.attach(),this.next()}attach(){this.hostElement.insertAdjacentElement("beforeend",this.element)}next(){setTimeout((()=>{new _}),1e3)}}class L{constructor(){this.sectionElement=document.getElementById("playing-card-game-section"),this.bubble=this.sectionElement.querySelector(".playing-card-game-section__bubble");const e=this.sectionElement.querySelector(".playing-card-game-section__card-list");this.card=e.querySelectorAll(".card"),this.selectedCardOfFirstUser=document.getElementById(l.firstUser.decideCard),this.selectedCardOfSecondtUser=document.getElementById(l.secondUser.decideCard),this.usernameOnSelectedCard=l.secondUser.name,this.init(),this.animation()}init(){this.bubbleInit(),this.cardInit()}animation(){this.cardAnimation(),setTimeout((()=>{new b,new v}),1500)}bubbleInit(){this.sectionElement.removeChild(this.bubble)}cardInit(){this.selectedCardOfSecondtUser.classList.remove("--selected"),this.selectedCardOfSecondtUser.classList.add("--decided");const e=this.selectedCardOfSecondtUser.querySelector(".name__front-side"),t=this.selectedCardOfSecondtUser.querySelector(".name__back-side");e.innerText=this.usernameOnSelectedCard,t.innerText=this.usernameOnSelectedCard,this.card.forEach((e=>{e.classList.add("--lock")})),this.addNumberOfCard()}cardAnimation(){setTimeout((()=>{this.selectedCardOfFirstUser.classList.add("--turn"),setTimeout((()=>{this.selectedCardOfSecondtUser.classList.add("--turn")}),500)}),500)}createNumber(){const e=[];for(let t=1;t<=this.card.length;t++)e.push(t);return e.sort((()=>.5-Math.random())),e}addNumberOfCard(){const e=this.createNumber();this.card.forEach(((t,s)=>{t.querySelector(".num").innerText=e[s].toString()}))}}class C{constructor(){this.hostElement=document.getElementById("app"),this.button=document.getElementById("playing-card-game-section__decided-card-event"),this.cardList=this.hostElement.querySelector(".playing-card-game-section__card-list"),this.card=this.cardList.querySelectorAll(".card"),this.configure()}configure(){this.button.addEventListener("click",this.clickHandler.bind(this))}clickHandler(){if(this.setFirstUserValidation())this.setFirstUser();else{if(!this.setSecondUserValidation())return;this.setSecondUser()}}setFirstUser(){const e=this.cardList.querySelector(".--selected");l.firstUser.decideCard=e.id,new u,console.log("first event success"),console.log(l)}setSecondUser(){const e=this.cardList.querySelector(".--selected");l.firstUser.decideCard!==e.id&&(l.secondUser.decideCard=e.id,new L,console.log("second event success"),console.log(l))}setFirstUserValidation(){return!l.firstUser.decideCard&&!l.secondUser.decideCard&&1===this.cardList.querySelectorAll(".--selected").length}setSecondUserValidation(){return""!==l.firstUser.decideCard&&!l.secondUser.decideCard&&1===this.cardList.querySelectorAll(".--selected").length}}class B{constructor(){this.hostElement=document.getElementById("app"),this.button=document.getElementById("playing-card-game-section__clear-card-of-select-type-event");const e=this.hostElement.querySelector(".playing-card-game-section__card-list");this.card=e.querySelectorAll(".card"),this.bubble=this.hostElement.querySelector(".playing-card-game-section__bubble"),this.bubbleText=this.bubble.querySelector(".playing-card-game-section__bubble__text"),this.buttonContent=this.bubble.querySelector(".playing-card-game-section__event-content"),this.configure()}configure(){this.button.addEventListener("click",this.clickHandler.bind(this))}clickHandler(){this.cardRemoveSelectType(),this.bubbleEventAnimation()}cardRemoveSelectType(){this.card.forEach((e=>{e.classList.contains("--selected")&&e.classList.remove("--selected")}))}bubbleEventAnimation(){this.bubbleVibe(),"block"===this.buttonContent.style.display&&(this.bubbleText.style.display="block",this.buttonContent.style.display="none")}bubbleVibe(){this.bubble.classList.add("--rightRotate"),setTimeout((()=>{this.bubble.classList.remove("--rightRotate"),this.bubble.classList.add("--leftRotate")}),100),setTimeout((()=>{this.bubble.classList.remove("--leftRotate")}),200)}}class U{constructor(){this.username=l.firstUser.name,this.sectionElement=document.getElementById("playing-card-game-section"),this.bubble=this.sectionElement.querySelector(".playing-card-game-section__bubble"),this.bubbleText=this.bubble.querySelector(".playing-card-game-section__bubble__text"),this.buttonContent=this.bubble.querySelector(".playing-card-game-section__event-content"),this.buttonContentText=this.buttonContent.querySelector(".playing-card-game-section__event-content__text"),this.decideCardEventButton=document.getElementById("playing-card-game-section__decided-card-event"),this.clearCardOfSelectTypeEventButton=document.getElementById("playing-card-game-section__clear-card-of-select-type-event");const e=this.sectionElement.querySelector(".playing-card-game-section__card-list");this.card=e.querySelectorAll(".card"),this.init(),this.animation(),new h,new C,new B}init(){this.bubbleInit(),this.cardInit()}animation(){this.cardAnimation(),setTimeout((()=>{new m(this.username)}),3500),setTimeout((()=>{this.bubbleAnimation()}),6e3)}bubbleInit(){this.bubbleText.innerText=this.username+e,this.buttonContent.style.display="none",this.buttonContentText.innerText="これにしますか？",this.decideCardEventButton.innerText="はい",this.clearCardOfSelectTypeEventButton.innerText="いいえ",this.bubble.classList.add("--hide")}cardInit(){this.card.forEach((e=>{e.classList.add("--hide"),e.classList.add("--lock")}))}bubbleAnimation(){this.bubble.classList.add("--fadeIn"),setTimeout((()=>{this.bubble.classList.remove("--hide")}),100)}cardAnimation(){this.card.forEach((e=>{e.classList.add("--moving"),setTimeout((()=>{e.classList.remove("--hide"),e.classList.remove("--moving")}),3500),setTimeout((()=>{e.classList.remove("--lock")}),6e3)}))}}class q{constructor(){const e=[c.firstUser,c.secondUser];e.sort((()=>.5-Math.random())),l.firstUser=e[0],l.secondUser=e[1]}}class A{constructor(){this.hostElement=document.getElementById("app"),this.templateElement=document.getElementById("playing-card-game-section__template");const e=document.importNode(this.templateElement.content,!0);this.element=e.firstElementChild,this.element.id="playing-card-game-section",this.cardTemplateElement=document.getElementById("playing-card-game-section__card__template"),this.cardElement=this.element.querySelector(".playing-card-game-section__card-list"),new q,this.attach(),new U}attach(){this.hostElement.insertAdjacentElement("afterbegin",this.element),this.insertCardList()}insertCardList(){for(let e=1;e<=13;e++){const t=document.importNode(this.cardTemplateElement.content,!0).firstElementChild;t.id=`card${e}`,this.cardElement.insertAdjacentElement("beforeend",t)}}}class k{constructor(){this.hostElement=document.getElementById("app"),this.element=document.getElementById("name-entry-section"),this.destroy(),this.next()}destroy(){this.hostElement.removeChild(this.element)}next(){new A}}class w extends n{constructor(){super(),this.init(),this.animation()}init(){this.setButton(),this.setEnterInputStatus()}animation(){this.enterInputAnimation(),this.bubbleAnimation(),setTimeout((()=>{new k}),1500)}next(){window.alert("end")}setButton(){this.button.classList.add("--lock")}setEnterInputStatus(){this.enterSecondInput.classList.add("--lock")}enterInputAnimation(){this.enterSecondInput.classList.add("--slideOut")}bubbleAnimation(){this.bubble.classList.add("--fadeOut")}}class O{constructor(){this.enterFirstInput=document.getElementById("enter-first-player-name-event"),this.enterSecondInput=document.getElementById("enter-second-player-name-event"),this.button=document.getElementById("enter-player-name-and-decide-event"),this.configure()}configure(){this.button.addEventListener("click",this.clickHandler.bind(this))}clickHandler(){if(this.setFirstUserValidation())this.setFirstUser();else{if(!this.setSecondUserValidation())return;this.setSecondUser()}}setFirstUser(){c.firstUser.name=this.enterFirstInput.value,new d,console.log(c),console.log(l)}setSecondUser(){c.secondUser.name=this.enterSecondInput.value,new w,console.log(c),console.log(l)}setFirstUserValidation(){return!c.firstUser.name&&!c.secondUser.name&&this.enterFirstInput.value.length>1}setSecondUserValidation(){return""!==c.firstUser.name&&!c.secondUser.name&&this.enterSecondInput.value.length>1}}class F extends n{constructor(){super(),this.init(),this.animation(),new r,new O}init(){this.setButton(),this.setEnterInputStatus(),this.setBubbleStatus(),this.setBubbleText()}animation(){this.bubble.classList.add("--fadeIn"),setTimeout((()=>{this.bubble.classList.remove("--hide")}),500)}setEnterInputStatus(){this.enterFirstInput.classList.add("--center"),this.enterSecondInput.style.display="none",this.enterSecondInput.classList.add("--hide"),this.enterSecondInput.classList.add("--lock")}setBubbleStatus(){this.bubble.classList.add("--hide")}setBubbleText(){this.bubbleText.innerText="対戦者名が表示されるよ\n1人目のプレーヤー名を入力して\nクリックしてね！",this.bubbleText.style.top="1em"}setButton(){this.button.classList.add("--lock"),this.button.innerText="クリック"}}class H{constructor(){this.hostElement=document.getElementById("app"),this.templateElement=document.getElementById("name-entry-section__template");const e=document.importNode(this.templateElement.content,!0);this.element=e.firstElementChild,this.element.id="name-entry-section",this.attach(),new F}attach(){this.hostElement.insertAdjacentElement("afterbegin",this.element)}}new class{constructor(){new H}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,